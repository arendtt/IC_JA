PennCNV - controle de qualidade 

# 1. QC por amostra
for i in {1..12}; do ./filter_cnv.pl ~/IC_JA/gatk-4.2.0.0/INPD_${i}.rawcnv -qclogfile ~/IC_JA/gatk-4.2.0.0/INPD_${i}.log -qclrrsd 0.3 -qcpassout INPD_${i}.qcpass -qcsumout INPD_${i}.qcsum -qcnumcnv 100 -out INPD_${i}.goodcnv ; done


## No R, usando o arquivo .qcsum. Visualização da distribuição de CNVs por pacientes (não fiz!)
eshg <- read.table("~/caminho/arquivoquevcquerchamar.goodcnv", h=T) 
head(eshg)
barplot(eshg$LRR_SD, ylim = c(0, 0.3), xlab = "Pacientes", ylab = "LRR_SD", main = "Sample QC") 
barplot(eshg$NumCNV, ylim = c(0,30), main = "CNVs por amostra", xlab = "Pacientes", ylab = "Número de CNVs" )


# 2. Remover regiões ruins

## Centroméricas
### Arquivo centromerescerto.txt achado na internet
# awk '{print $1":"$2"-"$3}' centromere.txt > centromerescerto.txt

for i in {1..12}; do ./scan_region.pl INPD_${i}.goodcnv centromerescerto.txt -minqueryfrac 0.5 > INPD_${i}_cnvcall.cen ; done
for i in {1..12}; do fgrep -v -f INPD_${i}_cnvcall.cen INPD_${i}.goodcnv > INPD_${i}_cen.clean ; done


## Teloméricas:
### Arquivo telomeres.txt feito com 10000bp de diferença - Genome Browser

for i in {1..12}; do ./scan_region.pl INPD_${i}_cen.clean telomeres.txt -minqueryfrac 0.5 > INPD_${i}_cnvcall.tel ; done
for i in {1..12}; do fgrep -v -f INPD_${i}_cnvcall.tel INPD_${i}_cen.clean > INPD_${i}_cen_tel.clean ; done


## Duplicações segmentais, exceto 22q11.2: 
### Arquivo segdup_hg19certo.bed feito em https://genome.ucsc.edu/cgi-bin/hgTables (group: Repeats; tracks: Segmental Dups; table: genomicSuperDups)
# tail -n +2 segdup.txt | awk '{print $2,$3, $4}'| sed 's/ /\t/g' > segdup_hg19.bed
# awk '{print $1":"$2"-"$3}' segdup_hg19.bed > segdup_hg19certo.bed

for i in {1..12}; do ./scan_region.pl INPD_${i}_cen_tel.clean segdup_hg19certo.bed -minqueryfrac 0.5 > INPD_${i}_cnvcall.segdup ; done
for i in {1..12}; do fgrep -v -f INPD_${i}_cnvcall.segdup INPD_${i}_cen_tel.clean > INPD_${i}_cen_tel_segdup.clean ; done


## Regiões de imunoglobulinas:
### Fiz o arquivo immuno_hg19 com as seguintes regiões: 
    # chr14:105994256-107281230
    # chr2:89156874-89630187
    # chr14:22090057-23021097

for i in {1..12}; do ./scan_region.pl INPD_${i}_cen_tel_segdup.clean immuno_hg19 -minqueryfrac 0.5 > INPD_${i}_cnvcall.immuno; done 
for i in {1..12}; do fgrep -v -f INPD_${i}_cnvcall.immuno INPD_${i}_cen_tel_segdup.clean > INPD_${i}_cen_tel_segdup_immuno.clean; done


# 3. Merge
for i in {1..12} ./clean_cnv.pl -signalfile ~/IC_JA/gatk-4.2.0.0/INPD.pfb --fraction 0.5 combineseg INPD_${i}_cen_tel_segdup.clean > INPD_${i}_cen_tel_segdup_immuno_merged.clean ; done

#signalfile: a file that contains Chr and Position for SNPs/markers
#Observação: fraction 0.5/50% (default)


# 4. Mínimo de sondas:

## Deleções (20 sondas):
for i in {1..12}; do ./filter_cnv.pl -numsnp 10 -length 1k -type del INPD_${i}_cen_tel_segdup_immuno_merged.clean -output INPD_${i}_del.clean ; done


## Duplicações (20 sondas):
for i in {1..12}; do ./filter_cnv.pl -numsnp 10 -length 1k -type dup INPD_${i}_cen_tel_segdup_immuno_merged.clean -output INPD_${i}_dup.clean ; done


# 5. Juntar arquivos com deleções e duplicações:
for i in {1..12}; do cat INPD_${i}_del.clean INPD_${i}_dup.clean > INPD_${i}_del_dup.clean ; done


# 6. Ordenar pela primeira coluna 
for i in {1..12} sort -rk 1 INPD_${i}_del_dup.clean > INPD_deldup_${i}.ordenado ; done


